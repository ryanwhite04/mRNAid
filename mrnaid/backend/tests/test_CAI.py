from common.Evaluation import Evaluation
from common.utils.Datatypes import OptimizationParameters
from unittest import main, TestCase

test_cases = [('ATGAAGTCGCAATTCAGCTCGCACGTACTCCCGCTAAGCCGAAAGGTCCTATAATCTAGCCGGTCGGGTGTCTGAGATAACTATGCTAACCAGGCCTAACCGCGCGGTATTCAGCTAAGCACTCCGATCCCAAGAGCCAACCGCGAACCAAGTGAAGACTATATCTGTTCGTTCTTCACG', 0.63),
              ('GTAATAGGACTTCTCAAGCAGGTTATGTACCGTCATGTCTTGACCTCCTACGCTTAATCTCTTAGGGGCCCACGGACCTGCGTTCTTCGTCCGCATGACTTACTGCCACTCATCTGTCCGTCTCCTCCCCAGTTGAACCCACGATCGTGG', 0.62),
              ('CCGAAACAATTGGGACACTAGATACAGGTTAACTCCATGGCAGAGACCAATAAACGACCCTGGAAGATTGGCAGCCTTTGAAAATACACGGCGCGTTATACCTCTCAACCTCTGCTGCGCCATTGGCCAGATAGGTCCCCTCCTCTCAGCCCTAGGGCAAAGCTCGAACGTACTCTAGGTTACCCTTACTGCACTTAGATATTCTTCTCCCGGTGACTTGCCGATGATTCTACAAGGGTCGGCTGGGTCGATCCACGTGGTTACCGTGAT', 0.7),
              ('CTAAATGTGATTCCAGTGCGTTGATCGTCGGTTCCATTCACTCTCTCGCTCTATAGTGAGGTTGGTCATCGCATATAACTGCTACTCTGCCTATTGTACAAAACTATCTTGTTATGTTGCGACAACGCCAGATAGCATGTTGGTTTATAGACGTCTTGTTTGCGGGCTAAGGGATACAGAACTGTTGAATGATATCAATCTGCGATCGAGTCGCTTCATAAAGTGTGCGTCTGTCGACTGAGCTGTGGTCGCTGGATGCTCAGTTCTGGT', 0.6)]

class TestCAI(TestCase):

    def test_h_sapiens(self):
        parameters = OptimizationParameters(
            organism='h_sapiens',
        )
        evaluation = Evaluation(parameters=parameters)
        for seq in test_cases:
            self.assertEqual(round(evaluation.CAI(seq[0]), 2), seq[1])
            
if __name__ == '__main__':
    main()